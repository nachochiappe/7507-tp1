Object subclass: #Calendario	instanceVariableNames: 'invitados eventos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Calendario methodsFor: 'removing' stamp: 'IgnacioChiappe 9/29/2018 13:17'!removerEvento: unNombre	(eventos includesKey: unNombre) ifFalse: [EventoInexistenteError signal ].	(eventos at: unNombre) borrarEvento.	eventos removeKey: unNombre.! !!Calendario methodsFor: 'accessing' stamp: 'IgnacioChiappe 9/29/2018 13:05'!estaOcupado: unNombre enAnio: unAnio mes: unMes dia: unDia hora: unaHora 		| fechaEvento |	(invitados includesKey: unNombre) ifFalse: [ InvitadoNoExisteError signal. ].	fechaEvento := DateAndTime year: unAnio month: unMes day: unDia hour: unaHora minute: 0.	^(invitados at: unNombre) estaOcupado: fechaEvento.! !!Calendario methodsFor: 'accessing' stamp: 'IgnacioChiappe 9/29/2018 11:03'!existePersona: unNombre	^(invitados includesKey: unNombre)! !!Calendario methodsFor: 'accessing' stamp: 'IgnacioChiappe 9/29/2018 11:05'!existeRecurso: unNombre	^(invitados includesKey: unNombre)! !!Calendario methodsFor: 'adding' stamp: 'IgnacioChiappe 9/29/2018 13:05'!agregarPersona: unNombre	| persona |	(invitados includesKey: unNombre) ifTrue: [ PersonaYaExisteError signal ].	persona := (Persona new) conNombre: unNombre.	invitados at: unNombre put: persona.! !!Calendario methodsFor: 'adding' stamp: 'IgnacioChiappe 9/29/2018 13:05'!agregarRecurso: unNombre	| recurso |	(invitados includesKey: unNombre) ifTrue: [ RecursoYaExisteError signal ].	recurso := (Recurso new) conNombre: unNombre.	invitados at: unNombre put: recurso.! !!Calendario methodsFor: 'adding' stamp: 'IgnacioChiappe 9/29/2018 13:05'!agregarEventoSemanalConNombre: unNombre semanas: cantidadSemanas invitados: listaInvitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora 	| unaFecha evento coleccionInvitados |	(eventos includesKey: unNombre) ifTrue: [ NombreDeEventoYaExisteError signal ].	unaFecha := DateAndTime year: unAnio month: unMes day: unDia hour: unaHora minute: 0.	coleccionInvitados := OrderedCollection new.	listaInvitados do: [ :invitado | 		(invitados includesKey: invitado) ifFalse: [ InvitadoNoExisteError signal ].		coleccionInvitados add: (invitados at: invitado) ].	evento := (EventoSemanal new) conNombre: unNombre conInvitados: coleccionInvitados enFecha: unaFecha duranteSemanas: cantidadSemanas.	eventos at: unNombre put: evento.! !!Calendario methodsFor: 'adding' stamp: 'IgnacioChiappe 9/29/2018 14:01'!agregarEventoConNombre: unNombre invitados: listaInvitados enAnio: unAnio mes: unMes dia: unDia hora: unaHora 	| unaFecha evento coleccionInvitados |	(eventos includesKey: unNombre) ifTrue: [ NombreDeEventoYaExisteError signal ].	unaFecha := DateAndTime year: unAnio month: unMes day: unDia hour: unaHora minute: 0.	coleccionInvitados := OrderedCollection new.	listaInvitados do: [ :invitado | 		(invitados includesKey: invitado) ifFalse: [ InvitadoNoExisteError signal ].		coleccionInvitados add: (invitados at: invitado) ].	evento := (EventoSimple new) conNombre: unNombre conInvitados: coleccionInvitados enFecha: unaFecha.	eventos at: unNombre put: evento.! !!Calendario methodsFor: 'initialization' stamp: 'IgnacioChiappe 9/29/2018 12:16'!initialize	eventos := Dictionary new.	invitados := Dictionary new.! !Error subclass: #CantidadSemanasMenorAUnoError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Object subclass: #Evento	instanceVariableNames: 'nombre invitados'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Error subclass: #EventoInexistenteError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Evento subclass: #EventoSemanal	instanceVariableNames: 'fechas semanas'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!EventoSemanal methodsFor: 'removing' stamp: 'IgnacioChiappe 9/29/2018 13:21'!borrarEvento	fechas do: [ :fecha | 		invitados do: [ :invitado | 			invitado removerEvento: fecha ] ].! !!EventoSemanal methodsFor: 'adding' stamp: 'IgnacioChiappe 9/29/2018 16:45'!conNombre: unNombre conInvitados: coleccionInvitados enFecha: unaFecha duranteSemanas: cantidadSemanas	| fecha |	(cantidadSemanas >= 1) ifFalse: [ CantidadSemanasMenorAUnoError signal ].	nombre := unNombre.	invitados := coleccionInvitados.	fechas := OrderedCollection new.	fecha := unaFecha.	semanas := cantidadSemanas.	(1 to: cantidadSemanas) do: [ :each | 		invitados do: [ :invitado | invitado agregarEvento: unNombre enFecha: fecha ].		fechas add: fecha.		fecha := fecha + (Duration weeks: 1) ].! !Evento subclass: #EventoSimple	instanceVariableNames: 'fecha'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!EventoSimple methodsFor: 'adding' stamp: 'IgnacioChiappe 9/29/2018 12:57'!conNombre: unNombre conInvitados: coleccionInvitados enFecha: unaFecha	nombre := unNombre.	invitados := coleccionInvitados.	fecha := unaFecha.	invitados do: [ :invitado | invitado agregarEvento: unNombre enFecha: unaFecha ].! !!EventoSimple methodsFor: 'removing' stamp: 'IgnacioChiappe 9/29/2018 13:22'!borrarEvento	invitados  do: [ :invitado | invitado removerEvento: fecha ].! !Error subclass: #InvitadoNoExisteError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Object subclass: #Invitados	instanceVariableNames: 'nombre eventos'	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Invitados methodsFor: 'removing' stamp: 'IgnacioChiappe 9/29/2018 12:38'!removerEvento: unaFecha	eventos removeKey: unaFecha.! !!Invitados methodsFor: 'initialization' stamp: 'IgnacioChiappe 9/29/2018 11:30'!initialize	eventos := Dictionary new.! !!Invitados methodsFor: 'accessing' stamp: 'IgnacioChiappe 9/29/2018 12:37'!estaOcupado: unaFecha	^(eventos includesKey: unaFecha).! !Error subclass: #NombreDeEventoYaExisteError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Invitados subclass: #Persona	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Persona methodsFor: 'adding' stamp: 'IgnacioChiappe 9/29/2018 12:41'!conNombre: unNombre	nombre := unNombre.! !!Persona methodsFor: 'adding' stamp: 'IgnacioChiappe 9/29/2018 12:44'!agregarEvento: conNombre enFecha: unaFecha	eventos at: unaFecha put: conNombre.! !Error subclass: #PersonaYaExisteError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Invitados subclass: #Recurso	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!!Recurso methodsFor: 'adding' stamp: 'IgnacioChiappe 9/29/2018 12:42'!conNombre: unNombre	nombre := unNombre.! !!Recurso methodsFor: 'adding' stamp: 'IgnacioChiappe 9/29/2018 13:05'!agregarEvento: conNombre enFecha: unaFecha	(eventos includesKey: unaFecha) ifTrue: [RecursoOcupadoError signal].	eventos at: unaFecha put: conNombre.! !Error subclass: #RecursoOcupadoError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!Error subclass: #RecursoYaExisteError	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'TP1'!